---
- name: wait for connection to be installed os
  wait_for_connection:
    timeout: 900
  tags:
  - wait

- name: sleep for cluster to be ready
  wait_for:
    port: 22
    state: started
    timeout: 1800
  tags:
  - wait

- name: set hostname
  hostname:
    name: '{{ inventory_hostname }}'
  tags:
  - hostname

- name: Disable swap for current session
  shell: |
    swapoff -a
    rm -f /swapfile
  tags:
  - swap

- name: Disable swap permanently, persist reboots
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes
  tags:
  - swap

- name: copy dns file
  template:
    src: dns/resolv.conf
    dest: /etc/resolv.conf
  tags:
  - dns

- name: install the postgres repository rpm from a remote repo
  yum:
    name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm
  tags:
  - postgres_yum

- name: install postgres server and client
  yum:
    name:
    - postgresql{{ postgres_version }}
    - postgresql{{ postgres_version }}-server
    state: present
  tags:
  - postgres_install

- name: create a new data partition
  parted:
    device: /dev/sdb
    number: 1
    state: present
  tags:
  - fs_xfs

- name: create a xfs filesystem on /dev/sdb1
  filesystem:
    fstype: xfs
    dev: /dev/sdb1
    force: yes
  tags:
  - fs_xfs

- name: mount and bind a volume
  mount:
    path: /data1
    src: /dev/sdb1
    state: mounted
    fstype: xfs
  tags:
  - fs_xfs

- name: stop postgresql server
  systemd:
    name: postgresql-{{ postgres_version }}
    daemon_reload: yes
    state: stopped
  ignore_errors: yes
  tags:
  - postgres_stop

- name: delete old postgresql data
  file:
    path: '{{ item.dir }}'
    state: absent
  with_items:
  - { dir: '/var/lib/pgsql/{{ postgres_version }}/data' }
  - { dir: '/var/lib/pgsql/{{ postgres_version }}/backup' }
  - { dir: '{{ postgres_pgdata }}' }
  - { dir: '{{ postgres_pgbackup }}' }
  - { dir: '{{ postgres_pgarchivelog }}' }
  tags:
  - postgres_dir

- name: create data directory
  file:
    path: '{{ item.dir }}'
    owner: postgres
    group: postgres
    mode: 0755
    state: directory
  with_items:
  - { dir: '{{ postgres_pgdata }}' }
  - { dir: '{{ postgres_pgbackup }}' }
  - { dir: '{{ postgres_pgarchivelog }}' }
  tags:
  - postgres_dir

- name: initialize database
  shell: |
    /usr/pgsql-{{ postgres_version }}/bin/postgresql-{{ postgres_version }}-setup initdb
  environment:
    PGSETUP_INITDB_OPTIONS: "-D {{ postgres_pgdata }}"
  register: result
  failed_when: result.rc > 1
  tags:
  - postgres_init

- name: change pgdata to new location in service file
  replace:
    path: /usr/lib/systemd/system/postgresql-{{ postgres_version }}.service
    regexp: '^Environment=PGDATA=/var/lib/pgsql/{{ postgres_version }}/data/'
    replace: 'Environment=PGDATA={{ postgres_pgdata }}/'
  tags:
  - postgres_service

- name: start postgresql server
  systemd:
    name: postgresql-{{ postgres_version }}
    daemon_reload: yes
    state: started
  tags:
  - postgres_service
